# Generated by kati 79efeda18cc5aa79f2a4e4566f5a955327701296

pool local_pool
 depth = 6

build _kati_always_build_: phony

rule rule0
 description = build $out
 command = /bin/sh -c "(rm -f out/bin/kati ; true ) && (GOPATH=\$$(pwd)/out go install -ldflags \"-X github.com/google/kati.gitVersion=\$$(git rev-parse HEAD)\" github.com/google/kati/cmd/kati ) && (cp out/bin/kati kati )"
build kati: rule0 go_src_stamp
rule rule1
 description = build $out
 command = /bin/sh -c "(rm -rf out/src out/pkg ; true ) && (mkdir -p out/src/github.com/google/kati ) && (cp -a go/ast.go go/bootstrap.go go/buf.go go/buf_test.go go/dep.go go/depgraph.go go/doc.go go/eval.go go/evalcmd.go go/exec.go go/expr.go go/expr_test.go go/fileutil.go go/flags.go go/func.go go/func_test.go go/log.go go/ninja.go go/ninja_test.go go/parser.go go/pathutil.go go/pathutil_test.go go/query.go go/rule_parser.go go/rule_parser_test.go go/serialize.go go/shellutil.go go/shellutil_test.go go/stats.go go/strutil.go go/strutil_test.go go/symtab.go go/var.go go/version.go go/worker.go cmd out/src/github.com/google/kati ) && (GOPATH=\$$(pwd)/out go get github.com/google/kati/cmd/kati ) && (touch go_src_stamp )"
build go_src_stamp: rule1 go/ast.go go/bootstrap.go go/buf.go go/buf_test.go go/dep.go go/depgraph.go go/doc.go go/eval.go go/evalcmd.go go/exec.go go/expr.go go/expr_test.go go/fileutil.go go/flags.go go/func.go go/func_test.go go/log.go go/ninja.go go/ninja_test.go go/parser.go go/pathutil.go go/pathutil_test.go go/query.go go/rule_parser.go go/rule_parser_test.go go/serialize.go go/shellutil.go go/shellutil_test.go go/stats.go go/strutil.go go/strutil_test.go go/symtab.go go/var.go go/version.go go/worker.go cmd/kati/main.go
rule rule2
 description = build $out
 command = /bin/sh -c "GOPATH=\$$(pwd)/out go test *.go"
build go_test: rule2 _kati_always_build_ go/ast.go go/bootstrap.go go/buf.go go/buf_test.go go/dep.go go/depgraph.go go/doc.go go/eval.go go/evalcmd.go go/exec.go go/expr.go go/expr_test.go go/fileutil.go go/flags.go go/func.go go/func_test.go go/log.go go/ninja.go go/ninja_test.go go/parser.go go/pathutil.go go/pathutil_test.go go/query.go go/rule_parser.go go/rule_parser_test.go go/serialize.go go/shellutil.go go/shellutil_test.go go/stats.go go/strutil.go go/strutil_test.go go/symtab.go go/var.go go/version.go go/worker.go
rule rule3
 description = build $out
 command = /bin/sh -c "rm -rf out kati go_src_stamp"
build go_clean: rule3 _kati_always_build_
rule rule4
 description = build $out
 command = /bin/sh -c "(make -j3 clean ) && (make -j3 all CXX='clang++-3.6 -fsanitize=thread' ) && (cp ckati tsan_ckati )"
build tsan_ckati: rule4
build test: phony _kati_always_build_ run_tests
rule rule5
 description = build $out
 command = /bin/sh -c "ruby runtest.rb -c -n"
build run_tests: rule5 all ckati_tests
build all: phony ckati ckati_tests
rule rule6
 description = build $out
 command = /bin/sh -c "\$$(which ccache) clang++ -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o ckati obj/src/affinity.o obj/src/command.o obj/src/dep.o obj/src/eval.o obj/src/exec.o obj/src/expr.o obj/src/file.o obj/src/file_cache.o obj/src/fileutil.o obj/src/find.o obj/src/flags.o obj/src/func.o obj/src/io.o obj/src/log.o obj/src/main.o obj/src/ninja.o obj/src/parser.o obj/src/regen.o obj/src/rule.o obj/src/stats.o obj/src/stmt.o obj/src/string_piece.o obj/src/stringprintf.o obj/src/strutil.o obj/src/symtab.o obj/src/thread_pool.o obj/src/timeutil.o obj/src/var.o obj/version.o -lrt -lpthread"
build ckati: rule6 obj/src/affinity.o obj/src/command.o obj/src/dep.o obj/src/eval.o obj/src/exec.o obj/src/expr.o obj/src/file.o obj/src/file_cache.o obj/src/fileutil.o obj/src/find.o obj/src/flags.o obj/src/func.o obj/src/io.o obj/src/log.o obj/src/main.o obj/src/ninja.o obj/src/parser.o obj/src/regen.o obj/src/rule.o obj/src/stats.o obj/src/stmt.o obj/src/string_piece.o obj/src/stringprintf.o obj/src/strutil.o obj/src/symtab.o obj/src/thread_pool.o obj/src/timeutil.o obj/src/var.o obj/version.o
rule rule7
 description = build $out
 depfile = obj/src/affinity.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/affinity.o src/affinity.cc && cp obj/src/affinity.d obj/src/affinity.d.tmp"
build obj/src/affinity.o: rule7 src/affinity.cc
rule rule8
 description = build $out
 depfile = obj/src/command.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/command.o src/command.cc && cp obj/src/command.d obj/src/command.d.tmp"
build obj/src/command.o: rule8 src/command.cc
rule rule9
 description = build $out
 depfile = obj/src/dep.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/dep.o src/dep.cc && cp obj/src/dep.d obj/src/dep.d.tmp"
build obj/src/dep.o: rule9 src/dep.cc
rule rule10
 description = build $out
 depfile = obj/src/eval.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/eval.o src/eval.cc && cp obj/src/eval.d obj/src/eval.d.tmp"
build obj/src/eval.o: rule10 src/eval.cc
rule rule11
 description = build $out
 depfile = obj/src/exec.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/exec.o src/exec.cc && cp obj/src/exec.d obj/src/exec.d.tmp"
build obj/src/exec.o: rule11 src/exec.cc
rule rule12
 description = build $out
 depfile = obj/src/expr.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/expr.o src/expr.cc && cp obj/src/expr.d obj/src/expr.d.tmp"
build obj/src/expr.o: rule12 src/expr.cc
rule rule13
 description = build $out
 depfile = obj/src/file.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/file.o src/file.cc && cp obj/src/file.d obj/src/file.d.tmp"
build obj/src/file.o: rule13 src/file.cc
rule rule14
 description = build $out
 depfile = obj/src/file_cache.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/file_cache.o src/file_cache.cc && cp obj/src/file_cache.d obj/src/file_cache.d.tmp"
build obj/src/file_cache.o: rule14 src/file_cache.cc
rule rule15
 description = build $out
 depfile = obj/src/fileutil.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/fileutil.o src/fileutil.cc && cp obj/src/fileutil.d obj/src/fileutil.d.tmp"
build obj/src/fileutil.o: rule15 src/fileutil.cc
rule rule16
 description = build $out
 depfile = obj/src/find.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/find.o src/find.cc && cp obj/src/find.d obj/src/find.d.tmp"
build obj/src/find.o: rule16 src/find.cc
rule rule17
 description = build $out
 depfile = obj/src/flags.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/flags.o src/flags.cc && cp obj/src/flags.d obj/src/flags.d.tmp"
build obj/src/flags.o: rule17 src/flags.cc
rule rule18
 description = build $out
 depfile = obj/src/func.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/func.o src/func.cc && cp obj/src/func.d obj/src/func.d.tmp"
build obj/src/func.o: rule18 src/func.cc
rule rule19
 description = build $out
 depfile = obj/src/io.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/io.o src/io.cc && cp obj/src/io.d obj/src/io.d.tmp"
build obj/src/io.o: rule19 src/io.cc
rule rule20
 description = build $out
 depfile = obj/src/log.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/log.o src/log.cc && cp obj/src/log.d obj/src/log.d.tmp"
build obj/src/log.o: rule20 src/log.cc
rule rule21
 description = build $out
 depfile = obj/src/main.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/main.o src/main.cc && cp obj/src/main.d obj/src/main.d.tmp"
build obj/src/main.o: rule21 src/main.cc
rule rule22
 description = build $out
 depfile = obj/src/ninja.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/ninja.o src/ninja.cc && cp obj/src/ninja.d obj/src/ninja.d.tmp"
build obj/src/ninja.o: rule22 src/ninja.cc
rule rule23
 description = build $out
 depfile = obj/src/parser.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/parser.o src/parser.cc && cp obj/src/parser.d obj/src/parser.d.tmp"
build obj/src/parser.o: rule23 src/parser.cc
rule rule24
 description = build $out
 depfile = obj/src/regen.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/regen.o src/regen.cc && cp obj/src/regen.d obj/src/regen.d.tmp"
build obj/src/regen.o: rule24 src/regen.cc
rule rule25
 description = build $out
 depfile = obj/src/rule.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/rule.o src/rule.cc && cp obj/src/rule.d obj/src/rule.d.tmp"
build obj/src/rule.o: rule25 src/rule.cc
rule rule26
 description = build $out
 depfile = obj/src/stats.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/stats.o src/stats.cc && cp obj/src/stats.d obj/src/stats.d.tmp"
build obj/src/stats.o: rule26 src/stats.cc
rule rule27
 description = build $out
 depfile = obj/src/stmt.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/stmt.o src/stmt.cc && cp obj/src/stmt.d obj/src/stmt.d.tmp"
build obj/src/stmt.o: rule27 src/stmt.cc
rule rule28
 description = build $out
 depfile = obj/src/string_piece.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/string_piece.o src/string_piece.cc && cp obj/src/string_piece.d obj/src/string_piece.d.tmp"
build obj/src/string_piece.o: rule28 src/string_piece.cc
rule rule29
 description = build $out
 depfile = obj/src/stringprintf.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/stringprintf.o src/stringprintf.cc && cp obj/src/stringprintf.d obj/src/stringprintf.d.tmp"
build obj/src/stringprintf.o: rule29 src/stringprintf.cc
rule rule30
 description = build $out
 depfile = obj/src/strutil.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/strutil.o src/strutil.cc && cp obj/src/strutil.d obj/src/strutil.d.tmp"
build obj/src/strutil.o: rule30 src/strutil.cc
rule rule31
 description = build $out
 depfile = obj/src/symtab.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/symtab.o src/symtab.cc && cp obj/src/symtab.d obj/src/symtab.d.tmp"
build obj/src/symtab.o: rule31 src/symtab.cc
rule rule32
 description = build $out
 depfile = obj/src/thread_pool.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/thread_pool.o src/thread_pool.cc && cp obj/src/thread_pool.d obj/src/thread_pool.d.tmp"
build obj/src/thread_pool.o: rule32 src/thread_pool.cc
rule rule33
 description = build $out
 depfile = obj/src/timeutil.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/timeutil.o src/timeutil.cc && cp obj/src/timeutil.d obj/src/timeutil.d.tmp"
build obj/src/timeutil.o: rule33 src/timeutil.cc
rule rule34
 description = build $out
 depfile = obj/src/var.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/src/var.o src/var.cc && cp obj/src/var.d obj/src/var.d.tmp"
build obj/src/var.o: rule34 src/var.cc
rule rule35
 description = build $out
 depfile = obj/version.d.tmp
 deps = gcc
 command = /bin/sh -c "\$$(which ccache) clang++ -c -std=c++17 -g -W -Wall -MMD -MP -Iinclude -O -DNOLOG  -march=native -o obj/version.o obj/version.cc && cp obj/version.d obj/version.d.tmp"
build obj/version.o: rule35 obj/version.cc obj/version.cc
rule rule36
 description = build $out
 command = /bin/sh -c "(echo '// +build ignore' > obj/version.cc ) && (echo >> obj/version.cc ) && (echo 'const char* kGitVersion = \"79efeda18cc5aa79f2a4e4566f5a955327701296\";' >> obj/version.cc )"
build obj/version.cc: rule36 /build/usr/bin/kati/.git/HEAD /build/usr/bin/kati/.git/index
build ckati_tests: phony _kati_always_build_
build test_quietly: phony run_tests
build clean: phony _kati_always_build_ ckati_clean
rule rule37
 description = build $out
 command = /bin/sh -c "(rm -rf obj/ckati ) && (rm -rf obj/*.o ) && (rm -rf obj/*.d ) && (rm -rf obj/src/* ) && (rm -rf obj/version.cc ) && (rm -rf ) && (rm -rf out )"
build ckati_clean: rule37 _kati_always_build_

default all
